{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/task.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nconst _c0 = function (a1) {\n  return [\"/lists\", a1];\n};\nfunction TaskViewComponent_a_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 11)(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const list_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(2, _c0, list_r2._id));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(list_r2.title);\n  }\n}\nfunction TaskViewComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const task_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r3.title);\n  }\n}\nexport class TaskViewComponent {\n  constructor(taskService, route) {\n    this.taskService = taskService;\n    this.route = route;\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      if (params.listId) {\n        this.selectedListId = params.listId;\n        this.taskService.getTasks(params.listId).subscribe(tasks => {\n          this.tasks = tasks;\n        });\n      } else {\n        this.tasks = undefined;\n      }\n    });\n    this.taskService.getLists().subscribe(lists => {\n      this.lists = lists;\n    });\n  }\n}\nTaskViewComponent.ɵfac = function TaskViewComponent_Factory(t) {\n  return new (t || TaskViewComponent)(i0.ɵɵdirectiveInject(i1.TaskService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nTaskViewComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TaskViewComponent,\n  selectors: [[\"app-task-view\"]],\n  decls: 15,\n  vars: 2,\n  consts: [[1, \"centered-content\"], [1, \"task-manager-container\"], [1, \"sidebar\", \"has-background-white\"], [1, \"title\", \"has-text-primary\"], [1, \"list-menu\"], [\"class\", \"list-menu-item\", \"routerLinkActive\", \"is-active\", 3, \"routerLink\", 4, \"ngFor\", \"ngForOf\"], [\"routerLink\", \"/new-list\", 1, \"button\", \"is-primary\", \"has-text-white\"], [1, \"task-list-container\", \"has-background-light\"], [\"class\", \"task\", 4, \"ngFor\", \"ngForOf\"], [1, \"circle-add-button\", \"is-primary\"], [\"src\", \"../../../assets/New.svg\", \"alt\", \"\"], [\"routerLinkActive\", \"is-active\", 1, \"list-menu-item\", 3, \"routerLink\"], [1, \"task\"]],\n  template: function TaskViewComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h1\", 3);\n      i0.ɵɵtext(4, \" Lists \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 4);\n      i0.ɵɵtemplate(6, TaskViewComponent_a_6_Template, 3, 4, \"a\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"button\", 6);\n      i0.ɵɵtext(8, \"+ New List\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\", 7)(10, \"h1\", 3);\n      i0.ɵɵtext(11, \" Tasks \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(12, TaskViewComponent_div_12_Template, 3, 1, \"div\", 8);\n      i0.ɵɵelementStart(13, \"button\", 9);\n      i0.ɵɵelement(14, \"img\", 10);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngForOf\", ctx.lists);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngForOf\", ctx.tasks);\n    }\n  },\n  dependencies: [i3.NgForOf, i2.RouterLink, i2.RouterLinkActive],\n  styles: [\"@import url(https://fonts.googleapis.com/css?family=Lato:400,700|Nunito:400,700);html[_ngcontent-%COMP%] {\\n  background: linear-gradient(to right top, #44ddd0, #27d7a1);\\n}\\n\\nhtml[_ngcontent-%COMP%], body[_ngcontent-%COMP%] {\\n  height: 100%;\\n}\\n\\n.centered-content[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  width: 100%;\\n  height: 100%;\\n}\\n\\n.modal-box[_ngcontent-%COMP%] {\\n  min-height: 200px;\\n  width: 100%;\\n  max-width: 580px;\\n  background: white;\\n  border-radius: 5px;\\n  padding: 35px;\\n}\\n\\n.task-manager-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  width: 100%;\\n  height: 100%;\\n  max-width: 1000px;\\n  max-height: 680px;\\n}\\n\\n.sidebar[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  width: 250px;\\n  background: white;\\n  padding: 42px;\\n  border-top-left-radius: 8px;\\n  border-bottom-left-radius: 8px;\\n}\\n\\n.task-list-container[_ngcontent-%COMP%] {\\n  position: relative;\\n  display: flex;\\n  flex-grow: 1;\\n  padding: 42px;\\n  flex-direction: column;\\n  border-top-right-radius: 8px;\\n  border-bottom-right-radius: 8px;\\n}\\n\\n.title[_ngcontent-%COMP%] {\\n  font-family: \\\"Lato\\\";\\n  font-size: 24px;\\n  text-transform: uppercase;\\n  letter-spacing: 2px;\\n}\\n\\n.list-menu[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  margin-top: 15px;\\n  flex-grow: 1;\\n}\\n.list-menu[_ngcontent-%COMP%]   .list-menu-item[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  padding: 10px 15px;\\n  border-radius: 5px;\\n  width: 100%;\\n  color: #5f5f5f;\\n  margin-bottom: 5px;\\n}\\n.list-menu[_ngcontent-%COMP%]   .list-menu-item[_ngcontent-%COMP%]:hover {\\n  background: #f8f8f8;\\n}\\n.list-menu[_ngcontent-%COMP%]   .list-menu-item.is-active[_ngcontent-%COMP%] {\\n  background-color: #cff8ef;\\n  color: rgb(0, 100, 80);\\n}\\n\\n.task[_ngcontent-%COMP%]:not(.complete) {\\n  background: white;\\n  padding: 15px 20px;\\n  border-radius: 5px;\\n  cursor: pointer;\\n  margin-top: 10px;\\n  transition: box-shadow 0.5s ease, transform 0.2s ease;\\n}\\n.task[_ngcontent-%COMP%]:not(.complete):active {\\n  transform: scale(0.95);\\n}\\n.task[_ngcontent-%COMP%]:not(.complete):hover {\\n  box-shadow: 0 0 0 5px #eeeeee;\\n}\\n.task.complete[_ngcontent-%COMP%] {\\n  background: white;\\n  padding: 15px 20px;\\n  border-radius: 5px;\\n  margin-top: 10px;\\n  transition: box-shadow 0.5s ease, transform 0.2s ease;\\n  text-decoration: line-through;\\n  opacity: 0.8;\\n}\\n\\n.circle-add-button[_ngcontent-%COMP%] {\\n  position: absolute;\\n  background-color: #15e9bb;\\n  bottom: 35px;\\n  right: 35px;\\n  height: 50px;\\n  width: 50px;\\n  border-radius: 50%;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9tYWluLXN0eWxlcy5zY3NzIiwid2VicGFjazovLy4vc3JjL2FwcC9wYWdlcy90YXNrLXZpZXcvdGFzay12aWV3LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTRCQTtFQUNJLDJEQUFBO0FDMUJKOztBRDZCQTtFQUNJLFlBQUE7QUMxQko7O0FENEJBO0VBQ0ksYUFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtBQ3pCSjs7QUQyQkE7RUFDSSxpQkFBQTtFQUNBLFdBQUE7RUFDQSxnQkFBQTtFQUNBLGlCQUFBO0VBQ0Esa0JBQUE7RUFDQSxhQUFBO0FDeEJKOztBQXZCQTtFQUNJLGFBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtFQUNBLGlCQUFBO0VBQ0EsaUJBQUE7QUEwQko7O0FBeEJBO0VBQ0EsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsWUFBQTtFQUNBLGlCQUFBO0VBRUEsYUFBQTtFQUVBLDJCQUFBO0VBQ0EsOEJBQUE7QUF5QkE7O0FBdEJBO0VBQ0Esa0JBQUE7RUFDQSxhQUFBO0VBQ0EsWUFBQTtFQUNBLGFBQUE7RUFDQSxzQkFBQTtFQUNBLDRCQUFBO0VBQ0EsK0JBQUE7QUF5QkE7O0FBdkJBO0VBQ0EsbUJBQUE7RUFDQSxlQUFBO0VBQ0EseUJBQUE7RUFDQSxtQkFBQTtBQTBCQTs7QUF4QkE7RUFDQSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxnQkFBQTtFQUNBLFlBQUE7QUEyQkE7QUExQkk7RUFDSSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSxrQkFBQTtFQUNBLGtCQUFBO0VBRUEsV0FBQTtFQUNBLGNBQUE7RUFDQSxrQkFBQTtBQTJCUjtBQXpCSTtFQUNJLG1CRDFDQTtBQ3FFUjtBQXpCSTtFQUNJLHlCQUFBO0VBQ0Esc0JEaERLO0FDMkViOztBQXRCSTtFQUNJLGlCQUFBO0VBQ0Esa0JBQUE7RUFDQSxrQkFBQTtFQUNBLGVBQUE7RUFDQSxnQkFBQTtFQUNBLHFEQUFBO0FBeUJSO0FBeEJJO0VBQ1Esc0JBQUE7QUEwQlo7QUF4Qkk7RUFDSSw2QkFBQTtBQTBCUjtBQXhCSTtFQUNJLGlCQUFBO0VBQ0Esa0JBQUE7RUFDQSxrQkFBQTtFQUNBLGdCQUFBO0VBQ0EscURBQUE7RUFDQSw2QkFBQTtFQUNBLFlBQUE7QUEwQlI7O0FBdkJJO0VBQ0ksa0JBQUE7RUFDQSx5QkFBQTtFQUNBLFlBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtFQUNBLFdBQUE7RUFDQSxrQkFBQTtBQTBCUiIsInNvdXJjZXNDb250ZW50IjpbIi8vaGVyZSBpbSBwbGFjaW5nIGFsbCBnbG9iYWwgc3R5bGVzXHJcbkBpbXBvcnQgdXJsKCdodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2Nzcz9mYW1pbHk9TGF0bzo0MDAsNzAwfE51bml0bzo0MDAsNzAwJyk7XHJcblxyXG5cclxuJHR1cnF1b2lzZTogIzQ0ZGRkMDtcclxuJGdyZWVuOiAjMjdkN2ExO1xyXG4kbGlnaHQtZ3JlZW46ICM0NWY2OWU7IFxyXG4kZGFyay1ncmVlbjogcmdiKDAsIDEwMCwgODApO1xyXG5cclxuJGxpZ2h0OiAjZjhmOGY4O1xyXG5cclxuXHJcbi8vIFVwZGF0ZSBCdWxtYSdzIGdsb2JhbCB2YXJpYWJsZXNcclxuJGZhbWlseS1zYW5zLXNlcmlmOiBcIk51bml0b1wiLCBzYW5zLXNlcmlmO1xyXG4kcHJpbWFyeTogJGdyZWVuO1xyXG5cclxuJGxpbms6ICR0dXJxdW9pc2U7XHJcblxyXG5cclxuLy8gVXBkYXRlIHNvbWUgb2YgQnVsbWEncyBjb21wb25lbnQgdmFyaWFibGVzXHJcblxyXG4kY29udHJvbC1ib3JkZXItd2lkdGg6IDJweDtcclxuJGlucHV0LWJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiRpbnB1dC1zaGFkb3c6IG5vbmU7XHJcblxyXG5cclxuLy8gU2V0IGN1c3RvbSBnbG9iYWwgc3R5bGVzICh3aWxsIGJlIGFwcGxpZWQgdG8gd2hvbGUgYXBwKVxyXG5cclxuaHRtbCB7XHJcbiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQgdG9wLCAkdHVycXVvaXNlLCAkZ3JlZW4pO1xyXG59XHJcblxyXG5odG1sLCBib2R5IHtcclxuICAgIGhlaWdodDogMTAwJTtcclxufVxyXG4uY2VudGVyZWQtY29udGVudCB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbn1cclxuLm1vZGFsLWJveHtcclxuICAgIG1pbi1oZWlnaHQ6IDIwMHB4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBtYXgtd2lkdGg6IDU4MHB4O1xyXG4gICAgYmFja2dyb3VuZDogd2hpdGU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICBwYWRkaW5nOjM1cHg7XHJcbn0iLCJAaW1wb3J0ICcuLi8uLi8uLi9tYWluLXN0eWxlcy5zY3NzJztcclxuLnRhc2stbWFuYWdlci1jb250YWluZXIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgbWF4LXdpZHRoOiAxMDAwcHg7XHJcbiAgICBtYXgtaGVpZ2h0OiA2ODBweDtcclxufVxyXG4uc2lkZWJhcntcclxuZGlzcGxheTogZmxleDtcclxuZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxud2lkdGg6IDI1MHB4O1xyXG5iYWNrZ3JvdW5kOiB3aGl0ZTtcclxuXHJcbnBhZGRpbmc6IDQycHg7XHJcblxyXG5ib3JkZXItdG9wLWxlZnQtcmFkaXVzOjhweDtcclxuYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogOHB4O1xyXG5cclxufVxyXG4udGFzay1saXN0LWNvbnRhaW5lcntcclxucG9zaXRpb246IHJlbGF0aXZlO1xyXG5kaXNwbGF5OiBmbGV4O1xyXG5mbGV4LWdyb3c6IDE7XHJcbnBhZGRpbmc6IDQycHg7XHJcbmZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbmJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiA4cHg7XHJcbmJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiA4cHg7XHJcbn1cclxuLnRpdGxle1xyXG5mb250LWZhbWlseTogJ0xhdG8nO1xyXG5mb250LXNpemU6IDI0cHg7XHJcbnRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbmxldHRlci1zcGFjaW5nOiAycHg7XHJcbn1cclxuLmxpc3QtbWVudXtcclxuZGlzcGxheTogZmxleDtcclxuZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxubWFyZ2luLXRvcDogMTVweDtcclxuZmxleC1ncm93OiAxO1xyXG4gICAgLmxpc3QtbWVudS1pdGVte1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICBwYWRkaW5nOiAxMHB4IDE1cHg7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG5cclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBjb2xvcjogIzVmNWY1ZjtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiA1cHg7XHJcblxyXG4gICAgJjpob3ZlcntcclxuICAgICAgICBiYWNrZ3JvdW5kOiAkbGlnaHQ7XHJcbiAgICB9XHJcbiAgICAmLmlzLWFjdGl2ZXtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjY2ZmOGVmO1xyXG4gICAgICAgIGNvbG9yOiAkZGFyay1ncmVlbjtcclxuICAgIH1cclxuICAgIH1cclxufVxyXG4udGFza3tcclxuICAgICY6bm90KC5jb21wbGV0ZSl7XHJcbiAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XHJcbiAgICAgICAgcGFkZGluZzogMTVweCAyMHB4O1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogMTBweDtcclxuICAgICAgICB0cmFuc2l0aW9uOiBib3gtc2hhZG93IDAuNXMgZWFzZSx0cmFuc2Zvcm0gMC4ycyBlYXNlO1xyXG4gICAgJjphY3RpdmV7XHJcbiAgICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMC45NSk7XHJcbiAgICAgICAgfVxyXG4gICAgJjpob3ZlcntcclxuICAgICAgICBib3gtc2hhZG93OiAwIDAgMCA1cHggI2VlZWVlZTtcclxuICAgIH19XHJcbiAgICAmLmNvbXBsZXRlIHtcclxuICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcclxuICAgICAgICBwYWRkaW5nOiAxNXB4IDIwcHg7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDEwcHg7XHJcbiAgICAgICAgdHJhbnNpdGlvbjogYm94LXNoYWRvdyAwLjVzIGVhc2UsdHJhbnNmb3JtIDAuMnMgZWFzZTtcclxuICAgICAgICB0ZXh0LWRlY29yYXRpb246IGxpbmUtdGhyb3VnaDtcclxuICAgICAgICBvcGFjaXR5OiAwLjg7XHJcbiAgICB9XHJcbiAgICB9XHJcbiAgICAuY2lyY2xlLWFkZC1idXR0b257XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICMxNWU5YmI7XHJcbiAgICAgICAgYm90dG9tOiAzNXB4O1xyXG4gICAgICAgIHJpZ2h0OiAzNXB4O1xyXG4gICAgICAgIGhlaWdodDogNTBweDtcclxuICAgICAgICB3aWR0aDogNTBweDtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICB9Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;;;IAQgBA,6BAA0H;IACnHA,YAAc;IAAAA,iBAAI;;;;IADiCA,oEAAkC;IACrFA,eAAc;IAAdA,mCAAc;;;;;IASzBA,+BAAiD;IAC1CA,YAAc;IAAAA,iBAAI;;;;IAAlBA,eAAc;IAAdA,mCAAc;;;ACTjC,OAAM,MAAOC,iBAAiB;EAK9BC,YAAoBC,WAAuB,EAAUC,KAAoB;IAArD,gBAAW,GAAXD,WAAW;IAAsB,UAAK,GAALC,KAAK;EAAiB;EAC3EC,QAAQ;IACN,IAAI,CAACD,KAAK,CAACE,MAAM,CAACC,SAAS,CACxBD,MAAc,IAAI;MACjB,IAAIA,MAAM,CAACE,MAAM,EAAE;QACjB,IAAI,CAACC,cAAc,GAAGH,MAAM,CAACE,MAAM;QACnC,IAAI,CAACL,WAAW,CAACO,QAAQ,CAACJ,MAAM,CAACE,MAAM,CAAC,CAACD,SAAS,CAAEI,KAAa,IAAI;UACnE,IAAI,CAACA,KAAK,GAAGA,KAAK;QACpB,CAAC,CAAC;OACH,MAAM;QACL,IAAI,CAACA,KAAK,GAAGC,SAAS;;IAE1B,CAAC,CACF;IAED,IAAI,CAACT,WAAW,CAACU,QAAQ,EAAE,CAACN,SAAS,CAAEO,KAAa,IAAI;MACtD,IAAI,CAACA,KAAK,GAAGA,KAAK;IACpB,CAAC,CAAC;EAEJ;;AAxBab,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAc;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDV9BnB,8BAAgC;MAKhBA,uBACJ;MAAAA,iBAAK;MACLA,8BAAyB;MACrBA,8DAEI;MACRA,iBAAM;MACNA,iCAA6E;MAAAA,0BAAU;MAAAA,iBAAS;MAEpGA,8BAAwD;MAEhDA,wBACJ;MAAAA,iBAAK;MACLA,oEAEM;MACNA,kCAA6C;MACzCA,2BAA2C;MAC/CA,iBAAS;;;MAf0CA,eAAQ;MAARA,mCAAQ;MAUpBA,eAAQ;MAARA,mCAAQ","names":["i0","TaskViewComponent","constructor","taskService","route","ngOnInit","params","subscribe","listId","selectedListId","getTasks","tasks","undefined","getLists","lists","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\task-manager\\frontend\\src\\app\\pages\\task-view\\task-view.component.html","D:\\task-manager\\frontend\\src\\app\\pages\\task-view\\task-view.component.ts"],"sourcesContent":["<div class = \"centered-content\">\n    <div class = \"task-manager-container\">\n    \n        <div class= \"sidebar has-background-white\">\n            <h1 class = \"title has-text-primary\">\n                Lists\n            </h1>\n            <div class = \"list-menu\">\n                <a class = \"list-menu-item\"  *ngFor =\"let list of lists\"  [routerLink]=\"['/lists',list._id]\" routerLinkActive=\"is-active\">\n                    <p>{{list.title}}</p>\n                </a>\n            </div>\n            <button class = \"button is-primary has-text-white\" routerLink = \"/new-list\" >+ New List</button>\n        </div>\n        <div class = \"task-list-container has-background-light\">\n            <h1 class = \"title has-text-primary\">\n                Tasks\n            </h1>\n            <div class = \"task\" *ngFor = \"let task of tasks\">\n                <p>{{task.title}}</p>\n            </div>\n            <button class=\"circle-add-button is-primary\">\n                <img  src=\"../../../assets/New.svg\" alt=\"\">\n            </button>\n        </div>\n    </div>\n    </div>","import { Component,OnInit} from '@angular/core';\nimport {TaskService} from 'src/app/task.service';\nimport {ActivatedRoute, Params} from '@angular/router';\nimport { Task } from 'src/app/models/task.model';\n\n@Component({\n  selector: 'app-task-view',\n  templateUrl: './task-view.component.html',\n  styleUrls: ['./task-view.component.scss']\n})\nexport class TaskViewComponent implements OnInit{\n  \nlists: any;\ntasks:any;\n\nconstructor(private taskService:TaskService, private route:ActivatedRoute){}\nngOnInit() {\n  this.route.params.subscribe(\n    (params: Params) => {\n      if (params.listId) {\n        this.selectedListId = params.listId;\n        this.taskService.getTasks(params.listId).subscribe((tasks: Task[]) => {\n          this.tasks = tasks;\n        })\n      } else {\n        this.tasks = undefined;\n      }\n    }\n  )\n\n  this.taskService.getLists().subscribe((lists: List[]) => {\n    this.lists = lists;\n  })\n  \n}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}