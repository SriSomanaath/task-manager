{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/task.service\";\nimport * as i2 from \"@angular/router\";\nexport class TaskViewComponent {\n  constructor(taskService, route) {\n    this.taskService = taskService;\n    this.route = route;\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      console.log(\"recevide aa\", params);\n    });\n    this.taskService.getLists().subscribe(lists => {\n      console.log(lists);\n    });\n  }\n}\nTaskViewComponent.ɵfac = function TaskViewComponent_Factory(t) {\n  return new (t || TaskViewComponent)(i0.ɵɵdirectiveInject(i1.TaskService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nTaskViewComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TaskViewComponent,\n  selectors: [[\"app-task-view\"]],\n  decls: 30,\n  vars: 0,\n  consts: [[1, \"centered-content\"], [1, \"task-manager-container\"], [1, \"sidebar\", \"has-background-white\"], [1, \"title\", \"has-text-primary\"], [1, \"list-menu\"], [1, \"list-menu-item\", \"is-active\"], [1, \"list-menu-item\"], [\"routerLink\", \"/new-list\", 1, \"button\", \"is-primary\", \"has-text-white\"], [1, \"task-list-container\", \"has-background-light\"], [1, \"task\"], [1, \"task\", \"complete\"], [\"routerLink\", \"./new-task\", 1, \"circle-add-button\", \"is-primary\"]],\n  template: function TaskViewComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h1\", 3);\n      i0.ɵɵtext(4, \" Lists \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"a\", 5)(7, \"p\");\n      i0.ɵɵtext(8, \"List #1\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"a\", 6)(10, \"p\");\n      i0.ɵɵtext(11, \"List #1\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"a\", 6)(13, \"p\");\n      i0.ɵɵtext(14, \"List #1\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(15, \"button\", 7);\n      i0.ɵɵtext(16, \"+ New List\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"div\", 8)(18, \"h1\", 3);\n      i0.ɵɵtext(19, \" Tasks \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"div\", 9)(21, \"p\");\n      i0.ɵɵtext(22, \"this is something that have to do\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(23, \"div\", 9)(24, \"p\");\n      i0.ɵɵtext(25, \"this is something that have to do\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(26, \"div\", 10)(27, \"p\");\n      i0.ɵɵtext(28, \"this is something that have to do\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(29, \"button\", 11);\n      i0.ɵɵelementEnd()()();\n    }\n  },\n  dependencies: [i2.RouterLink],\n  styles: [\"@import url(https://fonts.googleapis.com/css?family=Lato:400,700|Nunito:400,700);html[_ngcontent-%COMP%] {\\n  background: linear-gradient(to right top, #44ddd0, #27d7a1);\\n}\\n\\nhtml[_ngcontent-%COMP%], body[_ngcontent-%COMP%] {\\n  height: 100%;\\n}\\n\\n.centered-content[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  width: 100%;\\n  height: 100%;\\n}\\n\\n.modal-box[_ngcontent-%COMP%] {\\n  min-height: 200px;\\n  width: 100%;\\n  max-width: 580px;\\n  background: white;\\n  border-radius: 5px;\\n  padding: 35px;\\n}\\n\\n.task-manager-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  width: 100%;\\n  height: 100%;\\n  max-width: 1000px;\\n  max-height: 680px;\\n}\\n\\n.sidebar[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  width: 250px;\\n  background: white;\\n  padding: 42px;\\n  border-top-left-radius: 8px;\\n  border-bottom-left-radius: 8px;\\n}\\n\\n.task-list-container[_ngcontent-%COMP%] {\\n  position: relative;\\n  display: flex;\\n  flex-grow: 1;\\n  padding: 42px;\\n  flex-direction: column;\\n  border-top-right-radius: 8px;\\n  border-bottom-right-radius: 8px;\\n}\\n\\n.title[_ngcontent-%COMP%] {\\n  font-family: \\\"Lato\\\";\\n  font-size: 24px;\\n  text-transform: uppercase;\\n  letter-spacing: 2px;\\n}\\n\\n.list-menu[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  margin-top: 15px;\\n  flex-grow: 1;\\n}\\n.list-menu[_ngcontent-%COMP%]   .list-menu-item[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  padding: 10px 15px;\\n  border-radius: 5px;\\n  width: 100%;\\n  color: #5f5f5f;\\n  margin-bottom: 5px;\\n}\\n.list-menu[_ngcontent-%COMP%]   .list-menu-item[_ngcontent-%COMP%]:hover {\\n  background: #f8f8f8;\\n}\\n.list-menu[_ngcontent-%COMP%]   .list-menu-item.is-active[_ngcontent-%COMP%] {\\n  background-color: #cff8ef;\\n  color: rgb(0, 100, 80);\\n}\\n\\n.task[_ngcontent-%COMP%]:not(.complete) {\\n  background: white;\\n  padding: 15px 20px;\\n  border-radius: 5px;\\n  cursor: pointer;\\n  margin-top: 10px;\\n  transition: box-shadow 0.5s ease, transform 0.2s ease;\\n}\\n.task[_ngcontent-%COMP%]:not(.complete):active {\\n  transform: scale(0.95);\\n}\\n.task[_ngcontent-%COMP%]:not(.complete):hover {\\n  box-shadow: 0 0 0 5px #eeeeee;\\n}\\n.task.complete[_ngcontent-%COMP%] {\\n  background: white;\\n  padding: 15px 20px;\\n  border-radius: 5px;\\n  margin-top: 10px;\\n  transition: box-shadow 0.5s ease, transform 0.2s ease;\\n  text-decoration: line-through;\\n  opacity: 0.8;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9tYWluLXN0eWxlcy5zY3NzIiwid2VicGFjazovLy4vc3JjL2FwcC9wYWdlcy90YXNrLXZpZXcvdGFzay12aWV3LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTRCQTtFQUNJLDJEQUFBO0FDMUJKOztBRDZCQTtFQUNJLFlBQUE7QUMxQko7O0FENEJBO0VBQ0ksYUFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtBQ3pCSjs7QUQyQkE7RUFDSSxpQkFBQTtFQUNBLFdBQUE7RUFDQSxnQkFBQTtFQUNBLGlCQUFBO0VBQ0Esa0JBQUE7RUFDQSxhQUFBO0FDeEJKOztBQXZCQTtFQUNJLGFBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtFQUNBLGlCQUFBO0VBQ0EsaUJBQUE7QUEwQko7O0FBeEJBO0VBQ0EsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsWUFBQTtFQUNBLGlCQUFBO0VBRUEsYUFBQTtFQUVBLDJCQUFBO0VBQ0EsOEJBQUE7QUF5QkE7O0FBdEJBO0VBQ0Esa0JBQUE7RUFDQSxhQUFBO0VBQ0EsWUFBQTtFQUNBLGFBQUE7RUFDQSxzQkFBQTtFQUNBLDRCQUFBO0VBQ0EsK0JBQUE7QUF5QkE7O0FBdkJBO0VBQ0EsbUJBQUE7RUFDQSxlQUFBO0VBQ0EseUJBQUE7RUFDQSxtQkFBQTtBQTBCQTs7QUF4QkE7RUFDQSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxnQkFBQTtFQUNBLFlBQUE7QUEyQkE7QUExQkk7RUFDSSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSxrQkFBQTtFQUNBLGtCQUFBO0VBRUEsV0FBQTtFQUNBLGNBQUE7RUFDQSxrQkFBQTtBQTJCUjtBQXpCSTtFQUNJLG1CRDFDQTtBQ3FFUjtBQXpCSTtFQUNJLHlCQUFBO0VBQ0Esc0JEaERLO0FDMkViOztBQXRCSTtFQUNJLGlCQUFBO0VBQ0Esa0JBQUE7RUFDQSxrQkFBQTtFQUNBLGVBQUE7RUFDQSxnQkFBQTtFQUNBLHFEQUFBO0FBeUJSO0FBeEJJO0VBQ1Esc0JBQUE7QUEwQlo7QUF4Qkk7RUFDSSw2QkFBQTtBQTBCUjtBQXhCSTtFQUNJLGlCQUFBO0VBQ0Esa0JBQUE7RUFDQSxrQkFBQTtFQUNBLGdCQUFBO0VBQ0EscURBQUE7RUFDQSw2QkFBQTtFQUNBLFlBQUE7QUEwQlIiLCJzb3VyY2VzQ29udGVudCI6WyIvL2hlcmUgaW0gcGxhY2luZyBhbGwgZ2xvYmFsIHN0eWxlc1xyXG5AaW1wb3J0IHVybCgnaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PUxhdG86NDAwLDcwMHxOdW5pdG86NDAwLDcwMCcpO1xyXG5cclxuXHJcbiR0dXJxdW9pc2U6ICM0NGRkZDA7XHJcbiRncmVlbjogIzI3ZDdhMTtcclxuJGxpZ2h0LWdyZWVuOiAjNDVmNjllOyBcclxuJGRhcmstZ3JlZW46IHJnYigwLCAxMDAsIDgwKTtcclxuXHJcbiRsaWdodDogI2Y4ZjhmODtcclxuXHJcblxyXG4vLyBVcGRhdGUgQnVsbWEncyBnbG9iYWwgdmFyaWFibGVzXHJcbiRmYW1pbHktc2Fucy1zZXJpZjogXCJOdW5pdG9cIiwgc2Fucy1zZXJpZjtcclxuJHByaW1hcnk6ICRncmVlbjtcclxuXHJcbiRsaW5rOiAkdHVycXVvaXNlO1xyXG5cclxuXHJcbi8vIFVwZGF0ZSBzb21lIG9mIEJ1bG1hJ3MgY29tcG9uZW50IHZhcmlhYmxlc1xyXG5cclxuJGNvbnRyb2wtYm9yZGVyLXdpZHRoOiAycHg7XHJcbiRpbnB1dC1ib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xyXG4kaW5wdXQtc2hhZG93OiBub25lO1xyXG5cclxuXHJcbi8vIFNldCBjdXN0b20gZ2xvYmFsIHN0eWxlcyAod2lsbCBiZSBhcHBsaWVkIHRvIHdob2xlIGFwcClcclxuXHJcbmh0bWwge1xyXG4gICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0IHRvcCwgJHR1cnF1b2lzZSwgJGdyZWVuKTtcclxufVxyXG5cclxuaHRtbCwgYm9keSB7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbn1cclxuLmNlbnRlcmVkLWNvbnRlbnQge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG59XHJcbi5tb2RhbC1ib3h7XHJcbiAgICBtaW4taGVpZ2h0OiAyMDBweDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgbWF4LXdpZHRoOiA1ODBweDtcclxuICAgIGJhY2tncm91bmQ6IHdoaXRlO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgcGFkZGluZzozNXB4O1xyXG59IiwiQGltcG9ydCAnLi4vLi4vLi4vbWFpbi1zdHlsZXMuc2Nzcyc7XHJcbi50YXNrLW1hbmFnZXItY29udGFpbmVyIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIG1heC13aWR0aDogMTAwMHB4O1xyXG4gICAgbWF4LWhlaWdodDogNjgwcHg7XHJcbn1cclxuLnNpZGViYXJ7XHJcbmRpc3BsYXk6IGZsZXg7XHJcbmZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbndpZHRoOiAyNTBweDtcclxuYmFja2dyb3VuZDogd2hpdGU7XHJcblxyXG5wYWRkaW5nOiA0MnB4O1xyXG5cclxuYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czo4cHg7XHJcbmJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDhweDtcclxuXHJcbn1cclxuLnRhc2stbGlzdC1jb250YWluZXJ7XHJcbnBvc2l0aW9uOiByZWxhdGl2ZTtcclxuZGlzcGxheTogZmxleDtcclxuZmxleC1ncm93OiAxO1xyXG5wYWRkaW5nOiA0MnB4O1xyXG5mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG5ib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogOHB4O1xyXG5ib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogOHB4O1xyXG59XHJcbi50aXRsZXtcclxuZm9udC1mYW1pbHk6ICdMYXRvJztcclxuZm9udC1zaXplOiAyNHB4O1xyXG50ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG5sZXR0ZXItc3BhY2luZzogMnB4O1xyXG59XHJcbi5saXN0LW1lbnV7XHJcbmRpc3BsYXk6IGZsZXg7XHJcbmZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbm1hcmdpbi10b3A6IDE1cHg7XHJcbmZsZXgtZ3JvdzogMTtcclxuICAgIC5saXN0LW1lbnUtaXRlbXtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgcGFkZGluZzogMTBweCAxNXB4O1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuXHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgY29sb3I6ICM1ZjVmNWY7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogNXB4O1xyXG5cclxuICAgICY6aG92ZXJ7XHJcbiAgICAgICAgYmFja2dyb3VuZDogJGxpZ2h0O1xyXG4gICAgfVxyXG4gICAgJi5pcy1hY3RpdmV7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2NmZjhlZjtcclxuICAgICAgICBjb2xvcjogJGRhcmstZ3JlZW47XHJcbiAgICB9XHJcbiAgICB9XHJcbn1cclxuLnRhc2t7XHJcbiAgICAmOm5vdCguY29tcGxldGUpe1xyXG4gICAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xyXG4gICAgICAgIHBhZGRpbmc6IDE1cHggMjBweDtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDEwcHg7XHJcbiAgICAgICAgdHJhbnNpdGlvbjogYm94LXNoYWRvdyAwLjVzIGVhc2UsdHJhbnNmb3JtIDAuMnMgZWFzZTtcclxuICAgICY6YWN0aXZle1xyXG4gICAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDAuOTUpO1xyXG4gICAgICAgIH1cclxuICAgICY6aG92ZXJ7XHJcbiAgICAgICAgYm94LXNoYWRvdzogMCAwIDAgNXB4ICNlZWVlZWU7XHJcbiAgICB9fVxyXG4gICAgJi5jb21wbGV0ZSB7XHJcbiAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XHJcbiAgICAgICAgcGFkZGluZzogMTVweCAyMHB4O1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgICAgICBtYXJnaW4tdG9wOiAxMHB4O1xyXG4gICAgICAgIHRyYW5zaXRpb246IGJveC1zaGFkb3cgMC41cyBlYXNlLHRyYW5zZm9ybSAwLjJzIGVhc2U7XHJcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBsaW5lLXRocm91Z2g7XHJcbiAgICAgICAgb3BhY2l0eTogMC44O1xyXG4gICAgfVxyXG4gICAgfSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":";;;AASA,OAAM,MAAOA,iBAAiB;EAG9BC,YAAoBC,WAAuB,EAAUC,KAAoB;IAArD,gBAAW,GAAXD,WAAW;IAAsB,UAAK,GAALC,KAAK;EAAiB;EAE3EC,QAAQ;IACN,IAAI,CAACD,KAAK,CAACE,MAAM,CAACC,SAAS,CAClBD,MAAa,IAAG;MACjBE,OAAO,CAACC,GAAG,CAAC,aAAa,EAACH,MAAM,CAAC;IACzC,CAAC,CAAC;IAEF,IAAI,CAACH,WAAW,CAACO,QAAQ,EAAE,CAACH,SAAS,CAAEI,KAAW,IAAG;MAC7CH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;IAC1B,CAAC,CAAC;EACJ;;AAdaV,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAW;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCT9BC,8BAAgC;MAKhBA,uBACJ;MAAAA,iBAAK;MACLA,8BAAyB;MAEdA,uBAAO;MAAAA,iBAAI;MAElBA,4BAA6B;MACtBA,wBAAO;MAAAA,iBAAI;MAElBA,6BAA6B;MACtBA,wBAAO;MAAAA,iBAAI;MAGtBA,kCAA6E;MAAAA,2BAAU;MAAAA,iBAAS;MAEpGA,+BAAwD;MAEhDA,wBACJ;MAAAA,iBAAK;MACLA,+BAAoB;MACbA,kDAAiC;MAAAA,iBAAI;MAE5CA,+BAAoB;MACbA,kDAAiC;MAAAA,iBAAI;MAE5CA,gCAA6B;MACtBA,kDAAiC;MAAAA,iBAAI;MAE5CA,8BAES;MACbA,iBAAM","names":["TaskViewComponent","constructor","taskService","route","ngOnInit","params","subscribe","console","log","getLists","lists","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["D:\\task-manager\\frontend\\src\\app\\pages\\task-view\\task-view.component.ts","D:\\task-manager\\frontend\\src\\app\\pages\\task-view\\task-view.component.html"],"sourcesContent":["import { Component,OnInit} from '@angular/core';\nimport {TaskService} from 'src/app/task.service';\nimport {ActivatedRoute, Params} from '@angular/router';\n\n@Component({\n  selector: 'app-task-view',\n  templateUrl: './task-view.component.html',\n  styleUrls: ['./task-view.component.scss']\n})\nexport class TaskViewComponent implements OnInit{\n  \nlists: any;\nconstructor(private taskService:TaskService, private route:ActivatedRoute){}\n\nngOnInit(){\n  this.route.params.subscribe(\n          (params:Params)=>{\n          console.log(\"recevide aa\",params);\n  });\n\n  this.taskService.getLists().subscribe((lists:any[])=>{\n          console.log(lists)\n  });\n}\n}\n","<div class = \"centered-content\">\n    <div class = \"task-manager-container\">\n    \n        <div class= \"sidebar has-background-white\">\n            <h1 class = \"title has-text-primary\">\n                Lists\n            </h1>\n            <div class = \"list-menu\">\n                <a class = \"list-menu-item is-active\" >\n                    <p>List #1</p>\n                </a>   \n                <a class = \"list-menu-item\" >\n                    <p>List #1</p>\n                </a> \n                <a class = \"list-menu-item\" >\n                    <p>List #1</p>\n                </a> \n            </div>\n            <button class = \"button is-primary has-text-white\" routerLink = \"/new-list\" >+ New List</button>\n        </div>\n        <div class = \"task-list-container has-background-light\">\n            <h1 class = \"title has-text-primary\">\n                Tasks\n            </h1>\n            <div class = \"task\">\n                <p>this is something that have to do</p>\n            </div>\n            <div class = \"task\">\n                <p>this is something that have to do</p>\n            </div>\n            <div class = \"task complete\">\n                <p>this is something that have to do</p>\n            </div>\n            <button routerLink=\"./new-task\" class=\"circle-add-button is-primary\">\n                <!-- <img  src=\"../../../assets/New.svg\" alt=\"\"> -->\n            </button>\n        </div>\n    </div>\n    </div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}